---
// jobアイコンのインポート（個別で必要）
import iconPlane from '../../assets/icons/jobs/icon_job-plane-01.svg';
import iconPolice from '../../assets/icons/jobs/icon_job-police-01.svg';
import iconTrain from '../../assets/icons/jobs/icon_job-train-01.svg';
import iconStethoscope from '../../assets/icons/jobs/icon_job-stethoscope-01.svg';
import iconChefHat from '../../assets/icons/jobs/icon_job-chef-hat-01.svg';
import iconWrench from '../../assets/icons/jobs/icon_job-wrench-01.svg';
import iconFish from '../../assets/icons/jobs/icon_job-fish-01.svg';
import iconMicrophone from '../../assets/icons/jobs/icon_job-microphone-01.svg';
import iconInjection from '../../assets/icons/jobs/icon_job-injection-01.svg';
import iconHelmet from '../../assets/icons/jobs/icon_job-helmet-01.svg';
import iconPencil from '../../assets/icons/jobs/icon_job-pencil-01.svg';
import iconRocket from '../../assets/icons/jobs/icon_job-rocket-01.svg';
import iconGame from '../../assets/icons/jobs/icon_job-game-01.svg';
import iconPrograming from '../../assets/icons/jobs/icon_job-programing-01.svg';
import iconBaseball from '../../assets/icons/jobs/icon_job-baseball-01.svg';

// jobアイコンのデータ配列（元の順序を保持）
const jobIcons = [
  { icon: iconPlane, label: 'パイロット' },
  { icon: iconPolice, label: '警察官' },
  { icon: iconTrain, label: '電車運転士' },
  { icon: iconStethoscope, label: '医師' },
  { icon: iconChefHat, label: 'シェフ' },
  { icon: iconWrench, label: '整備士' },
  { icon: iconFish, label: '漁師' },
  { icon: iconMicrophone, label: 'アナウンサー' },
  { icon: iconInjection, label: '看護師' },
  { icon: iconHelmet, label: '建設作業員' },
  { icon: iconPencil, label: 'デザイナー' },
  { icon: iconRocket, label: '宇宙飛行士' },
  { icon: iconGame, label: 'ゲームクリエイター' },
  { icon: iconPrograming, label: 'プログラマー' },
  { icon: iconBaseball, label: '野球選手' }
];
---

<section class="jobs-slider-section">
  <!-- Swiper CSS -->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css" />
  
  <div class="jobs-slider swiper">
    <div class="jobs-slider__track swiper-wrapper">
      <!-- アイコン一覧（Swiperスライド） -->
      {jobIcons.map((job) => (
        <div class="jobs-icon swiper-slide">
          <img 
            src={job.icon.src} 
            alt={job.label} 
            class="jobs-icon__image" 
          />
        </div>
      ))}
    </div>
  </div>
</section>

<style lang="scss">
  @import "../../styles/index";

  .jobs-slider-section {
    background-color: $background-tertiary;
    
    @include breakpoint-up(xl) {
      padding-top: rem(20);
    }
  }

  .jobs-slider {
    width: 100vw;
    margin-left: calc(-50vw + 50%);
    overflow: hidden;
    position: relative;
    padding: rem(40) 0;
  }

  .jobs-slider__track {
    // Swiperのwrapperとして機能
  }

  .jobs-icon {
    width: rem(50);
    height: rem(50);
    display: flex;
    align-items: center;
    justify-content: center;
    
    @include breakpoint-up(lg) {
      width: rem(60);
      height: rem(60);
    }
    
    @include breakpoint-up(xl) {
      width: rem(80);
      height: rem(80);
    }
    
    // 個別のプカプカアニメーション（遅延を使って自然な動きに）
    &:nth-child(odd) {
      animation: floatUp 3s ease-in-out infinite;
    }
    
    &:nth-child(even) {
      animation: floatUp 3s ease-in-out infinite 1.5s;
    }
    
    &:nth-child(3n) {
      animation: floatUp 3.5s ease-in-out infinite 0.8s;
    }
    
    &:nth-child(4n) {
      animation: floatUp 2.8s ease-in-out infinite 2.2s;
    }
    
    &:nth-child(5n) {
      animation: floatUp 3.2s ease-in-out infinite 1.8s;
    }
    
    &__image {
      width: 100%;
      height: 100%;
      object-fit: contain;
      transition: transform 0.3s ease;
    }
    
    &:hover &__image {
      transform: scale(1.1) rotate(30deg);
    }
  }

  // 上下プカプカアニメーション
  @keyframes floatUp {
    0%, 100% {
      transform: translateY(0);
    }
    50% {
      transform: translateY(rem(-12));
    }
  }
</style>

<script>
import { Swiper } from 'swiper';
import { Autoplay, FreeMode } from 'swiper/modules';

document.addEventListener('DOMContentLoaded', function() {
  const jobsSlider = new Swiper('.jobs-slider', {
    modules: [Autoplay, FreeMode],
    
    // 基本設定
    direction: 'horizontal',
    loop: true,
    centeredSlides: false,
    freeMode: {
      enabled: true,
      momentum: false,
    },
    
    // レスポンシブなスライド数
    slidesPerView: 'auto',
    spaceBetween: 20,
    
    // 自動再生設定
    autoplay: {
      delay: 0,
      pauseOnMouseEnter: false,
      disableOnInteraction: false,
      reverseDirection: false,
    },
    
    // 速度設定（レスポンシブ）
    speed: window.innerWidth < 640 ? 8000 : 9000, // スマホ時は1.5倍速、sm以上は更に速く
    
    // レスポンシブ設定
    breakpoints: {
      640: {
        spaceBetween: 20,
        speed: 9000, // sm以降はより速く
      },
      1024: {
        spaceBetween: 30,
        speed: 9000,
      },
      1280: {
        spaceBetween: 40,
        speed: 9000,
      },
    },
    
    // 無限ループの設定
    allowTouchMove: false,
    simulateTouch: false,
    watchOverflow: false,
    
    // CSS関連
    cssMode: false,
  });
  
  // ウィンドウリサイズ時の速度調整
  let resizeTimer: number;
  window.addEventListener('resize', function() {
    clearTimeout(resizeTimer);
    resizeTimer = setTimeout(function() {
      const newSpeed = window.innerWidth < 640 ? 8000 : 9000;
      if (jobsSlider.autoplay) {
        jobsSlider.autoplay.stop();
        jobsSlider.params.speed = newSpeed;
        jobsSlider.autoplay.start();
      }
    }, 250);
  });
});
</script>