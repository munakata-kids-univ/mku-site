---
// パートナーロゴデータをインポート
import { partnerLogos, partnersContent } from '../../data/partnerLogos.js';
---

<section class="partners">
  <div class="partners__header fade-up">
    <h2 class="partners__title">ご協力いただいている<span class="partners__title-break">{partnersContent.titleBreak}</span></h2>
    <h3 class="partners__subtitle">{partnersContent.subtitle}</h3>
  </div>
  
  <p class="partners__description" set:html={partnersContent.description}></p>

  <div class="partners__slider">
    <div class="partners__slides" data-duration="20" data-duration-sm="35">
      <!-- 第1セット -->
      <div class="partners__slide">
        {partnerLogos.map((logo) => (
          <div class="partner-logo">
            <img src={logo.logoSrc} alt={logo.alt} class="partner-logo__image" />
          </div>
        ))}
      </div>
      <!-- 第2セット（シームレスループ用） -->
      <div class="partners__slide">
        {partnerLogos.map((logo) => (
          <div class="partner-logo">
            <img src={logo.logoSrc} alt={logo.alt} class="partner-logo__image" />
          </div>
        ))}
      </div>
    </div>
  </div>
</section>

<style lang="scss">
@import '../../styles/_index';

/* ご協力いただいている団体さま セクション */
.partners {
  @include container;
  background-color: $background-primary;
  padding-top: rem(80);
  padding-bottom: rem(80);
  position: relative;
  border-top-left-radius: rem(30);
  border-bottom-right-radius: rem(30);
  
  @include breakpoint-up(md) {
    padding-top: rem(100);
    padding-bottom: rem(100);
    border-top-left-radius: rem(60);
    border-bottom-right-radius: rem(60);
  }
  
  @include breakpoint-up(lg) {
    padding-top: rem(120);
    padding-bottom: rem(120);
    border-top-left-radius: rem(72);
    border-bottom-right-radius: rem(72);
  }

  &::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(to bottom, $background-quaternary 50%, $background-secondary 50%);
    z-index: -1;
  }

  &__header {
    text-align: center;
    margin-bottom: rem(64);
    
    @include breakpoint-up(md) {
      margin-bottom: rem(80);
    }
  }

  &__title {
    @include font-ja-l(semibold);
    margin-bottom: 0;
    margin-top: rem(10);
    
    @include breakpoint-up(lg) {
      @include font-ja-2l(semibold);
    }
  }

  &__title-break {
    @include breakpoint-down(sm) {
      display: block;
    }
  }

  &__subtitle {
    @include font-ja-2s(semibold);
    color: $text-secondary;
    margin: 0;
    letter-spacing: 1px;
    
    @include breakpoint-up(lg) {
      @include font-ja-s(semibold);
    }
  }

  &__description {
    @include font-ja-s;
    color: $text-primary;
    line-height: 1.6;
    max-width: rem(800);
    margin: 0 auto 0;
    text-align: left;
    
    @include breakpoint-up(md) {
      margin-top: rem(32);
    }
    
    @include breakpoint-up(lg) {
      text-align: center;
    }
  }

  &__slider {
    overflow: hidden;
    position: relative;
    width: 100vw;
    margin-left: calc(-50vw + 50%);
    margin-top: rem(70);
  }

  &__slides {
    display: flex;
    width: 200%; // 2セット分の幅
  }
  
  &__slide {
    flex-basis: 50%; // 各セットが50%の幅
    display: flex;
    align-items: center;
  }
}

.partner-logo {
  height: rem(60);
  display: flex;
  align-items: center;
  justify-content: center;
  flex-shrink: 0;
  padding: 0 rem(20); // 左右に均等な余白
  
  @include breakpoint-up(lg) {
    padding: 0 rem(30); // lg以上は30pxずつの余白
  }

  &__image {
    height: 100%;
    width: auto;
    max-width: rem(200);
    object-fit: contain;
    
    @include breakpoint-up(lg) {
      max-width: rem(240);
    }
  }
}
</style>

<script>
window.addEventListener('DOMContentLoaded', (event) => {
  const slides = document.getElementsByClassName('partners__slides');
  
  for (let i = 0; i < slides.length; ++i) {
    const target = slides[i];
    // sm以降はより遅い速度を使用
    const isSmUp = window.innerWidth >= 640;
    const durationAttr = isSmUp ? target.dataset.durationSm : target.dataset.duration;
    const duration = parseInt(durationAttr || target.dataset.duration) * 1000 || 25000;
    const childNum = target.firstElementChild.children.length; // 1つ目のスライド内のロゴ数
    const logoWidth = ((100 / childNum)).toFixed(2);
    
    // CSS変数としてロゴ幅を設定
    target.style.setProperty('--logo-width', `${logoWidth}%`);

    let startTime = 0;
    let elapsed = 0;
    let progress = 0;

    const loop = (currentTime) => {
      if (!startTime) startTime = currentTime;
      
      elapsed = currentTime - startTime;
      progress = elapsed / duration;
      
      if (progress >= 1) {
        // 1周完了、リセット
        progress = 0;
        startTime = currentTime;
      }
      
      // シームレスな移動（50%移動すれば元の位置に戻る）
      const translateX = -(progress * 50);
      target.style.transform = `translateX(${translateX}%)`;
      
      requestAnimationFrame(loop);
    };
    
    requestAnimationFrame(loop);
  }
});
</script>