---
// パートナーロゴデータをインポート
import { partnerLogos, partnersContent } from '../../data/partnerLogos.js';
---

<section class="partners">
  <div class="partners__header fade-up">
    <h2 class="partners__title">ご協力いただいている<span class="partners__title-break">{partnersContent.titleBreak}</span></h2>
    <h3 class="partners__subtitle">{partnersContent.subtitle}</h3>
  </div>
  
  <p class="partners__description" set:html={partnersContent.description}></p>

  <div class="partners__slider swiper">
    <!-- Swiper CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css" />
    
    <div class="partners__track swiper-wrapper">
      {partnerLogos.map((logo) => (
        <div class="partner-logo swiper-slide">
          <img src={logo.logoSrc} alt={logo.alt} class="partner-logo__image" />
        </div>
      ))}
    </div>
  </div>
</section>

<style lang="scss">
@import '../../styles/_index';

/* ご協力いただいている団体さま セクション */
.partners {
  @include container;
  background-color: $background-primary;
  padding-top: rem(80);
  padding-bottom: rem(80);
  position: relative;
  border-top-left-radius: rem(30);
  border-bottom-right-radius: rem(30);
  
  @include breakpoint-up(md) {
    padding-top: rem(100);
    padding-bottom: rem(100);
    border-top-left-radius: rem(60);
    border-bottom-right-radius: rem(60);
  }
  
  @include breakpoint-up(lg) {
    padding-top: rem(120);
    padding-bottom: rem(120);
    border-top-left-radius: rem(72);
    border-bottom-right-radius: rem(72);
  }

  &::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(to bottom, $background-quaternary 50%, $background-secondary 50%);
    z-index: -1;
  }

  &__header {
    text-align: center;
    margin-bottom: rem(64);
    
    @include breakpoint-up(md) {
      margin-bottom: rem(80);
    }
  }

  &__title {
    @include font-ja-l(semibold);
    margin-bottom: 0;
    margin-top: rem(10);
    
    @include breakpoint-up(lg) {
      @include font-ja-2l(semibold);
    }
  }

  &__title-break {
    @include breakpoint-down(sm) {
      display: block;
    }
  }

  &__subtitle {
    @include font-ja-2s(semibold);
    color: $text-secondary;
    margin: 0;
    letter-spacing: 1px;
    
    @include breakpoint-up(lg) {
      @include font-ja-s(semibold);
    }
  }

  &__description {
    @include font-ja-s;
    color: $text-primary;
    line-height: 1.6;
    max-width: rem(800);
    margin: 0 auto 0;
    text-align: left;
    
    @include breakpoint-up(md) {
      margin-top: rem(32);
    }
    
    @include breakpoint-up(lg) {
      text-align: center;
    }
  }

  &__slider {
    overflow: hidden;
    position: relative;
    width: 100vw;
    margin-left: calc(-50vw + 50%);
    margin-top: rem(70);
  }

  &__track {
    // Swiperのwrapperとして機能
  }
}

.partner-logo {
  height: rem(60);
  display: flex;
  align-items: center;
  justify-content: center;
  width: auto; // SwiperのslidesPerView: 'auto'で自動幅

  &__image {
    height: 100%;
    width: auto;
    max-width: rem(200);
    object-fit: contain;
    
    @include breakpoint-up(lg) {
      max-width: rem(240);
    }
  }
}
</style>

<script>
import { Swiper } from 'swiper';
import { Autoplay, FreeMode } from 'swiper/modules';

document.addEventListener('DOMContentLoaded', function() {
  const partnersSlider = new Swiper('.partners__slider', {
    modules: [Autoplay, FreeMode],
    
    // 基本設定
    direction: 'horizontal',
    loop: true,
    centeredSlides: false,
    freeMode: {
      enabled: true,
      momentum: false,
    },
    
    // レスポンシブなスライド数
    slidesPerView: 'auto',
    spaceBetween: 40,
    
    // 自動再生設定
    autoplay: {
      delay: 0,
      pauseOnMouseEnter: false,
      disableOnInteraction: false,
      reverseDirection: false,
    },
    
    // 速度設定（レスポンシブ）
    speed: window.innerWidth < 640 ? 8000 : 12000, // sm未満時はより速く
    
    // レスポンシブ設定
    breakpoints: {
      640: {
        speed: 12000, // sm以降は通常速度
      },
      1024: {
        spaceBetween: 60, // lg以上は60pxの間隔
        speed: 12000,
      },
    },
    
    // 無限ループの設定
    allowTouchMove: false,
    simulateTouch: false,
    watchOverflow: false,
    
    // CSS関連
    cssMode: false,
  });
  
  // ウィンドウリサイズ時の速度調整
  let resizeTimer: number;
  window.addEventListener('resize', function() {
    clearTimeout(resizeTimer);
    resizeTimer = setTimeout(function() {
      const newSpeed = window.innerWidth < 640 ? 8000 : 12000;
      if (partnersSlider.autoplay) {
        partnersSlider.autoplay.stop();
        partnersSlider.params.speed = newSpeed;
        partnersSlider.autoplay.start();
      }
    }, 250);
  });
});
</script>