---
import BaseLayout from '@/layouts/BaseLayout.astro';
import HeroSection from '@/components/HeroSection.astro';
import Breadcrumb from '@/components/Breadcrumb.astro';
import ContentSectionHeader from '@/components/ContentSectionHeader.astro';
import CourseCard from '@/components/CourseCard.astro';
import { 
  getGlobalSettings, 
  getMainCampusSettings, 
  getMainCampusCourses 
} from '../../../lib/microcms';
import { convertYearToPath } from '../../../utils/yearConverter';
import { formatDateForCourse } from '../../../utils/dateUtils';

// データ取得
const globalSettings = await getGlobalSettings();
const mainCampusSettings = await getMainCampusSettings();
const currentYear = globalSettings.currentYear;

// 現行年度の講座一覧を取得
const currentYearValue = Array.isArray(currentYear) ? currentYear[0] : currentYear;
if (!currentYearValue) {
  throw new Error('Current year is not defined');
}
const courses = await getMainCampusCourses(currentYearValue.toString());

// デバッグ情報
console.log('Current Year Value:', currentYearValue);
console.log('取得された講座数:', courses.length);
console.log('最初の3件の講座:', courses.slice(0, 3).map(c => ({ id: c.id, title: c.title, year: c.year })));

// 過去の実績セクション用：全年度の講座データを取得
const allCourses = await getMainCampusCourses();

// ページ情報
const pageTitle = `メインキャンパス（${currentYearValue}）`;
const pageDescription = `${currentYearValue}のメインキャンパス講座一覧。年間を通じて開催される基幹講座で、様々な分野の専門家による講義や体験活動を通じて、子どもたちの学習意欲を高めます。`;

// パンくずリスト
const breadcrumbItems = [
  { label: 'ホーム', href: '/' },
  { label: '講座内容', href: '/course' },
  { label: 'メインキャンパス' }
];

// 申込ボタン（メインキャンパス設定から取得、visibleかつ参加意向確認以外）
const buttons = mainCampusSettings.buttons
  .filter(button => {
    const buttonType = Array.isArray(button.type) ? button.type[0] : button.type;
    return button.visible && buttonType !== "参加意向確認";
  });

// currentYearと一致する講座のみをフィルタリング
const filteredCourses = courses.filter(course => {
  const courseYearValue = Array.isArray(course.year) ? course.year[0] : course.year;
  return courseYearValue === currentYearValue;
});

// 講座カード用のデータ変換
const currentYearPath = convertYearToPath(currentYearValue.toString());
const courseCards = filteredCourses.map(course => ({
  id: course.id,
  title: course.title,
  thumbImg: course.thumbImg,
  status: course.status,
  year: course.year,
  href: `/course/main-campus/${currentYearPath}/${course.id}`,
  providerNames: course.providerInfo?.map(item => item.providerName).join('、') || '',
  targetGrades: Array.isArray(course.targetGrades) ? course.targetGrades : (course.targetGrades ? [course.targetGrades] : []),
  hasReport: !!(course.afterImages?.length || course.instructor || course.afterReport || course.afterMovieUrl)
}));


// フェーズに応じたメッセージ
const getPhaseMessage = (phase: string) => {
  switch (phase) {
    case 'before':
      return '講座の申し込み受付を開始しました。下記のボタンからお申し込みください。';
    case 'during':
      return '講座を開催中です。参加者の皆様は実施要項をご確認ください。';
    case 'after':
      return '今年度の講座は終了しました。来年度の開催をお楽しみに。';
    default:
      return '';
  }
};

const phase = Array.isArray(mainCampusSettings.phase) ? mainCampusSettings.phase[0] : mainCampusSettings.phase;
const phaseMessage = getPhaseMessage(phase || '');

// 開催日データを抽出（現在年度に該当するものを取得）
const executedDates = mainCampusSettings.executedDate?.filter(item => {
  const itemYear = Array.isArray(item.year) ? item.year[0] : item.year;
  return itemYear === currentYearValue;
});

// 最初の開催日を表示用にフォーマット
const displayExecutedDate = executedDates && executedDates.length > 0 
  ? formatDateForCourse(executedDates[0].date) 
  : null;


// ステータス別の背景色クラス取得関数
function getStatusColorClass(status: string): string {
  switch (status) {
    case '募集前':
    case '募集締切':
    case '募集終了':
    case '準備中':
      return 'status-badge--dark-gray';
    case '1次募集受付中':
    case '2次募集受付中':
      return 'status-badge--brand-secondary';
    case '1次抽選作業中':
      return 'status-badge--brand-turquoise';
    case '1次当選者発表':
      return 'status-badge--brand-pink';
    case '開催中':
      return 'status-badge--brand-turquoise';
    case '終了':
      return 'status-badge--dark-gray';
    default:
      return 'status-badge--dark-gray';
  }
}

// フェーズをステータス表示文字列に変換する関数
function convertPhaseToStatus(phase: string): string {
  switch (phase) {
    case '募集前':
      return '募集前';
    case '募集締切':
      return '募集締切';
    case '1次募集受付中':
      return '1次募集受付中';
    case '2次募集受付中':
      return '2次募集受付中';
    case '1次抽選作業中':
      return '1次抽選作業中';
    case '1次当選者発表':
      return '1次当選者発表';
    case '開催中':
      return '開催中';
    case '終了':
      return '終了';
    default:
      return '準備中';
  }
}

// 講座のステータスを取得する関数（個別ステータス優先、フォールバックでフェーズ設定）
function getCourseStatus(course: any, globalPhase: string, currentYearValue: string): string {
  // 講座の年度を取得
  const courseYearValue = Array.isArray(course.year) ? course.year[0] : course.year;
  
  // 現在年度以外の講座（過去の実績）は強制的に「募集終了」
  if (courseYearValue !== currentYearValue) {
    return '募集終了';
  }
  
  // 現在年度の講座の場合、既存のロジックを適用
  // 個別の講座ステータスが設定されており、「フェーズ設定に従う」以外の場合はそれを使用
  if (course.status && Array.isArray(course.status) && course.status.length > 0 && 
      course.status[0] !== 'default' && course.status[0] !== 'フェーズ設定に従う') {
    return course.status[0];
  }
  
  // 個別ステータスが未設定、default、または「フェーズ設定に従う」の場合、グローバルフェーズを変換して使用
  const phaseValue = Array.isArray(globalPhase) ? globalPhase[0] : globalPhase;
  return convertPhaseToStatus(phaseValue || '準備中');
}

// 学年の色分けクラス取得関数（scheduleページと同様）
function getGradeColorClass(grade: string): string {
  // むなかた子ども大学の日（学校名）の場合
  if (grade.includes('小学校') || grade.includes('中学校') || grade.includes('学校') || grade.includes('学園')) {
    return 'mku-day';
  }
  
  // 特殊なケース
  if (grade === '未就学児' || grade === 'だれでも' || grade.includes('その他')) {
    return 'special';
  }
  
  // 数字を抽出
  const yearMatch = grade.match(/^(\d+)年$/);
  if (yearMatch) {
    const num = parseInt(yearMatch[1]);
    if (num >= 1 && num <= 3) return 'elementary-low';    // 1~3年
    if (num >= 4 && num <= 6) return 'elementary-high';   // 4~6年
    if (num >= 7 && num <= 9) return 'junior';            // 7~9年
  }
  
  // 高校生
  if (grade.match(/^高\d+$/)) {
    return 'junior'; // 高校生は中学生と同じ色
  }
  
  // その他
  return 'special';
}

// 学年の整列順序関数（scheduleページと同様）
function formatTargetGrades(targetGrades: string | string[]): { sortedGrades: string[]; htmlString: string } {
  const grades = Array.isArray(targetGrades) ? targetGrades : [targetGrades];
  
  // 学年の表示順を決める関数
  function getGradeOrder(grade: string): number {
    // 未就学児は最初
    if (grade === '未就学児') {
      return 0;
    }
    
    // 1年～9年（小中学校）
    const elementaryJuniorMatch = grade.match(/^(\d+)年$/);
    if (elementaryJuniorMatch && elementaryJuniorMatch[1]) {
      const num = parseInt(elementaryJuniorMatch[1]);
      if (num >= 1 && num <= 9) {
        return num; // 1～9の順序
      }
    }
    
    // 高1～高3（高校）
    const highSchoolMatch = grade.match(/^高(\d+)$/);
    if (highSchoolMatch && highSchoolMatch[1]) {
      const num = parseInt(highSchoolMatch[1]);
      if (num >= 1 && num <= 3) {
        return 10 + num; // 11～13の順序（10 + 1～3）
      }
    }
    
    // その他は最後
    return 999;
  }
  
  // 学年を指定された順序でソート
  const sortedGrades = grades.sort((a, b) => {
    return getGradeOrder(a) - getGradeOrder(b);
  });
  
  return {
    sortedGrades,
    htmlString: sortedGrades.join('・') // 後方互換性のため
  };
}
---

<BaseLayout title={pageTitle} description={pageDescription}>
  <main>
    <!-- ヒーローセクション -->
    <HeroSection 
      title="メインキャンパス"
      subtitle="Main Campus"
      imageSrc="/images/backgrounds/img_bg-hero_main-campus-01.webp"
      imageAlt="メインキャンパス"
      customBackgroundStyle="hero--main-campus"
    />

    <!-- パンくずリスト -->
    <Breadcrumb items={breadcrumbItems} />
  
    <!-- ①導入セクション -->
    <section class="intro-section">
      <div class="content-section__container intro-section__container">
        <div class="intro-section__content">
          <h1 class="intro-section__title">
            <span class="intro-section__title-line">この1日で、<br class="u-br-sm">興味・関心が『志』に変わる。</span>
          </h1>
          <p class="intro-section__description">
            宗像市内に住む小・中学生が興味のある職業を1つ選び、1日をとおしてじっくり学ぶ、年に1度の職業体験イベントです。<br>
            大学・企業・団体等の方が講師となり、それぞれの講座をまるで学校の授業のような時間割で開催する、むなかた子ども大学の基幹プログラムです。
          </p>
          {phaseMessage && (
            <div class="intro-section__message">
              <p>{phaseMessage}</p>
            </div>
          )}
          
          <!-- メインキャンパス 3つのポイント -->
          <div class="intro-section__points">
            <h2 class="intro-section__points-title">
              メインキャンパス<br class="u-br-sm"> <span class="intro-section__points-number">3</span>つのポイント
            </h2>
            
            <div class="intro-section__points-grid">
              <!-- ポイント01 -->
              <div class="intro-section__point">
                <div class="intro-section__point-image">
                  <img src="/images/content/img_main-campus-point-01.webp" alt="ポイント1" />
                </div>
                <div class="intro-section__point-content">
                  <div class="intro-section__point-number">
                    <span class="point-text">point</span><span class="point-number">01</span>
                  </div>
                  <h3 class="intro-section__point-title">“本物”が直接指導</h3>
                  <p class="intro-section__point-description">
                    大学教授、パティシエ、アナウンサー、声優、デザイナーなど、現場で活躍するプロが講義を担当。
                  </p>
                </div>
              </div>
              
              <!-- ポイント02 -->
              <div class="intro-section__point">
                <div class="intro-section__point-image">
                  <img src="/images/content/img_main-campus-point-02.webp" alt="ポイント2" />
                </div>
                <div class="intro-section__point-content">
                  <div class="intro-section__point-number">
                    <span class="point-text">point</span><span class="point-number">02</span>
                  </div>
                  <h3 class="intro-section__point-title">リアルな道具で体験</h3>
                  <p class="intro-section__point-description">
                    ドローン・医療器具・工具など、現場で使われている機材を使用した体験も。
                  </p>
                </div>
              </div>
              
              <!-- ポイント03 -->
              <div class="intro-section__point">
                <div class="intro-section__point-image">
                  <img src="/images/content/img_main-campus-point-03.webp" alt="ポイント3" />
                </div>
                <div class="intro-section__point-content">
                  <div class="intro-section__point-number">
                    <span class="point-text">point</span><span class="point-number">03</span>
                  </div>
                  <h3 class="intro-section__point-title">1日がかりの深い学び</h3>
                  <p class="intro-section__point-description">
                    「働くこと」や、選んだ職業の「社会的意義」を、40分×4コマの充実した職業体験をとおして学ぶ。
                  </p>
                </div>
              </div>
            </div>
          </div>
          
          <!-- Navigation Links -->
          <div class="intro-section__page-nav">
            <nav class="page-nav__menu">
              <a href="#courses" class="page-nav__link">
                <div class="page-nav__arrow"></div>
                <span class="page-nav__text">開講コース案内</span>
              </a>
              <a href="#flow" class="page-nav__link">
                <div class="page-nav__arrow"></div>
                <span class="page-nav__text">1日の流れ</span>
              </a>
              <a href="#process" class="page-nav__link">
                <div class="page-nav__arrow"></div>
                <span class="page-nav__text">参加までの流れ</span>
              </a>
              <a href="#archive" class="page-nav__link">
                <div class="page-nav__arrow"></div>
                <span class="page-nav__text">過去の実績</span>
              </a>
            </nav>
          </div>
        </div>
      </div>
    </section>

    <!-- ②{currentYear}年度 開講コース -->
    <section id="courses" class="courses-section content-section">
      <div class="content-section__container">
        <!-- 申込ボタン Section -->
        {buttons.length > 0 && (
          <div class="application-buttons-section fade-up">
            <div class="application-buttons-check-label">＼Check／</div>
            <div class={`application-buttons-grid ${buttons.length === 1 ? 'application-buttons-grid--single' : ''}`}>
              {buttons.map((button) => {
                // 外部リンクかどうかを判定
                const isExternalLink = button.url.startsWith('http://') || button.url.startsWith('https://');
                
                return (
                  <div class="application-button-item">
                    {button.labelAbove && (
                      <p class="application-button-item__label-above" set:html={button.labelAbove.replace(/\n/g, '<br>')}></p>
                    )}
                    <div class="application-button-item__button-wrapper">
                      <a 
                        href={button.url} 
                        class="application-button-item__button base-button base-button--blue"
                        target={isExternalLink ? '_blank' : undefined}
                        rel={isExternalLink ? 'noopener noreferrer' : undefined}
                      >
                        <span class="base-button__text" set:html={button.buttonText.replace(/\n/g, '<br>')}></span>
                        <div class="base-button__icon">
                          {isExternalLink ? (
                            <div class="base-button__icon-external">
                              <svg width="16" height="16" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M18.2609 18.2609H1.73913V1.73913H6.95652V0H0.869565C0.389351 0 0 0.389351 0 0.869565V19.1304C0 19.6106 0.389351 20 0.869565 20H19.1304C19.6106 20 20 19.6106 20 19.1304V13.0435H18.2609V18.2609Z" fill="currentColor"/>
                                <path d="M19.1304 0H11.3043V1.73913H17.0311L7.21118 11.559L8.44097 12.7888L18.2609 2.96892V8.69565H20V0.869565C20 0.389351 19.6106 0 19.1304 0Z" fill="currentColor"/>
                              </svg>
                            </div>
                          ) : (
                            <div class="base-button__icon-arrow"></div>
                          )}
                        </div>
                      </a>
                      {button.labelBelow && (
                        <p class="application-button-item__label-below" set:html={button.labelBelow.replace(/\n/g, '<br>')}></p>
                      )}
                    </div>
                  </div>
                );
              })}
            </div>
          </div>
        )}

        <ContentSectionHeader 
          englishTitle=""
          title={`${currentYearValue} コース一覧`}
          customTitleWrapperStyle="courses-title-wrapper"
          customIconStyle="courses-icon"
          class="fade-up"
        />
        
        {courseCards.length > 0 ? (
          <>
            {displayExecutedDate && (
              <div class="executed-date-display">
                開催日：{displayExecutedDate}
              </div>
            )}
            <div class="courses-grid">
            {courseCards.map(course => (
              <a href={course.href} class="course-card">
                <div class="course-card__image">
                  <img 
                    src={course.thumbImg?.url || '/images/ui/img_course-no-image-01.webp'} 
                    alt={course.title} 
                  />
                  {(() => {
                    const resolvedStatus = getCourseStatus(course, phase || '', currentYearValue);
                    return resolvedStatus && (
                      <div class="course-card__status">
                        <span class={`status-badge ${getStatusColorClass(resolvedStatus)}`}>{resolvedStatus}</span>
                      </div>
                    );
                  })()}
                  {course.hasReport && (
                    <div class="course-card__report-ribbon">
                      <div class="report-ribbon__tail"></div>
                      <div class="report-ribbon__circle">
                        <div class="report-ribbon__text">
                          <span class="report-ribbon__text-line1">実施</span><br>
                          <span class="report-ribbon__text-line2">レポート</span>
                        </div>
                      </div>
                    </div>
                  )}
                </div>
                <div class="course-card__content">
                  <div class="course-card__header">
                    <h3 class="course-card__title">{course.title}</h3>
                    <div class="course-card__arrow"></div>
                  </div>
                  {course.providerNames && (
                    <p class="course-card__provider">{course.providerNames}</p>
                  )}
                  {course.targetGrades.length > 0 && (
                    <div class="course-card__grades">
                      {(() => {
                        const { sortedGrades } = formatTargetGrades(course.targetGrades);
                        return sortedGrades.map(grade => (
                          <span class={`target-grade target-grade--${getGradeColorClass(grade)}`}>{grade}</span>
                        ));
                      })()}
                    </div>
                  )}
                </div>
              </a>
            ))}
          </div>
          </>
        ) : (
          <div class="empty-state">
            <div class="empty-state__icon">
              <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M22 10v6M2 10l10-5 10 5-10 5z"/>
                <path d="M6 12v5c3 3 9 3 12 0v-5"/>
              </svg>
            </div>
            <p class="empty-state__description">
              現在、{currentYearValue}の講座は登録されていません。<br>
              講座が決まり次第、随時掲載いたしますので、<br class="u-br-sm">お待ちください。
            </p>
          </div>
        )}
      </div>
    </section>

    <!-- ③1日の流れ -->
    <section id="flow" class="flow-section content-section">
      <div class="content-section__container flow-section__container">
        <ContentSectionHeader 
          englishTitle=""
          title="1日の流れ"
          class="fade-up"
        />
        
        <div class="flow-section__content">
          <div class="flow-section__steps">
            <!-- ステップ01 -->
            <div class="flow-section__step">
              <div class="flow-section__step-image">
                <img src="/images/content/img_main-campus-dayflow-01.webp" alt="受付（集合）" />
              </div>
              <div class="flow-section__step-content">
                <h3 class="flow-section__step-title">受付（集合）</h3>
                <p class="flow-section__step-description">
                  各会場で、コースごとに受付を行います。
                </p>
              </div>
            </div>
            
            <!-- 矢印アイコン -->
            <div class="flow-section__arrow">
              <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M9 18l6-6-6-6"/>
              </svg>
            </div>
            
            <!-- ステップ02 -->
            <div class="flow-section__step">
              <div class="flow-section__step-image">
                <img src="/images/content/img_main-campus-dayflow-02.webp" alt="はじめの会" />
              </div>
              <div class="flow-section__step-content">
                <h3 class="flow-section__step-title">はじめの会</h3>
                <p class="flow-section__step-description">
                  むなかた子ども大学の学長、副学長のあいさつなど
                </p>
              </div>
            </div>
            
            <!-- 矢印アイコン -->
            <div class="flow-section__arrow">
              <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M9 18l6-6-6-6"/>
              </svg>
            </div>
            
            <!-- ステップ03 -->
            <div class="flow-section__step">
              <div class="flow-section__step-image">
                <img src="/images/content/img_main-campus-dayflow-03.webp" alt="講座" />
              </div>
              <div class="flow-section__step-content">
                <h3 class="flow-section__step-title">講座</h3>
                <p class="flow-section__step-description">
                  その道のプロが、１日をとおし様々な体験や講義を提供。あなたの夢や疑問を、ぜひぶつけてみてください。
                </p>
              </div>
            </div>
            
            <!-- 矢印アイコン -->
            <div class="flow-section__arrow">
              <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M9 18l6-6-6-6"/>
              </svg>
            </div>
            
            <!-- ステップ04 -->
            <div class="flow-section__step">
              <div class="flow-section__step-image">
                <img src="/images/content/img_main-campus-dayflow-04.webp" alt="終わりの会" />
              </div>
              <div class="flow-section__step-content">
                <h3 class="flow-section__step-title">終わりの会</h3>
                <p class="flow-section__step-description">
                  たくさんのことを感じ、学ぶことができる充実した１日になることでしょう。
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- ④参加までの流れ -->
    <section id="process" class="process-section content-section">
      <div class="content-section__container">
        <ContentSectionHeader 
          englishTitle=""
          title="参加までの流れ"
          class="fade-up"
        />
        <div class="process-section__content">
          <div class="process-section__intro">
            <p>
              メインキャンパスの募集は1次と2次の2回行われます。<br>
              詳しくは以下の流れをご確認ください。
            </p>
          </div>
          <div class="process-section__illustration">
            <img 
              src="/images/content/img_main-campus_joinflow-illustration-sp.webp" 
              alt="参加までの流れ"
              class="process-section__image process-section__image--sp"
            />
            <img 
              src="/images/content/img_main-campus_joinflow-illustration-pc.webp" 
              alt="参加までの流れ"
              class="process-section__image process-section__image--pc"
            />
          </div>
        </div>
      </div>
    </section>

    <!-- ⑤過去の実績 -->
    <section id="archive" class="archive-section content-section">
      <div class="content-section__container archive-section__container">
        <ContentSectionHeader 
          englishTitle=""
          title="過去の実績"
          class="fade-up"
        />
        <div class="archive-section__content">
          <div class="archive-links">
            {(() => {
              // 全講座から年度を抽出し、重複を除去
              const allYears = allCourses.map(course => {
                const courseYear = Array.isArray(course.year) ? course.year[0] : course.year;
                return courseYear;
              }).filter((year, index, self) => self.indexOf(year) === index);
              
              // 現在年度の数字部分を取得（令和7年度 → 7）
              const currentYearNum = parseInt(currentYearValue.replace('令和', '').replace('年度', ''));
              
              // 現在年度より小さい年度のみフィルタリングし、数字の降順でソート
              const pastYears = allYears
                .filter(year => year && typeof year === 'string') // undefinedと非文字列をフィルタリング
                .map(year => {
                  const yearNum = parseInt(year.replace('令和', '').replace('年度', ''));
                  return { original: year, num: yearNum };
                })
                .filter(yearObj => yearObj.num < currentYearNum)
                .sort((a, b) => b.num - a.num) // 降順ソート
                .map(yearObj => yearObj.original);
              
              return pastYears.map(year => {
                if (!year) return null;
                const yearNum = parseInt(year.replace('令和', '').replace('年度', ''));
                const urlYear = `r${yearNum.toString().padStart(2, '0')}`;
                return (
                  <a href={`/course/main-campus/${urlYear}`} class="base-button base-button--blue">
                    <span class="base-button__text">{year}</span>
                    <div class="base-button__icon">
                      <div class="base-button__icon-arrow"></div>
                    </div>
                  </a>
                );
              });
            })()}
          </div>
        </div>
      </div>
    </section>
  </main>
</BaseLayout>

<style lang="scss">
@import "../../../styles/index";

/* 共通セクションスタイル */
.content-section {
  padding: 0 0 rem(120);
  background: $background-primary;
  position: relative;
  
  @include breakpoint-up(xl) {
    padding: 0 0 rem(160);
  }

  &__container {
    padding: 0 5%;
    overflow: hidden;
    @include breakpoint-up(xl) {
      padding: 0 rem(50);
    }
  }
}

/* セクション間の装飾要素 */
.section-decoration {
  border-top-left-radius: rem(30);
  border-bottom-right-radius: rem(30);
  
  @include breakpoint-up(md) {
    border-top-left-radius: rem(60);
    border-bottom-right-radius: rem(60);
  }
  
  @include breakpoint-up(lg) {
    border-top-left-radius: rem(72);
    border-bottom-right-radius: rem(72);
  }
  
  &::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -1;
  }
}

/* ①導入セクション */
.intro-section {
  @extend .content-section;
  background: $background-primary;
  padding: rem(60) 0 rem(120);
  text-align: center;
  border-bottom-right-radius: rem(30);
  position: relative;
  
  @include breakpoint-up(md) {
    border-bottom-right-radius: rem(60);
  }
  
  @include breakpoint-up(lg) {
    border-bottom-right-radius: rem(72);
  }
  
  @include breakpoint-up(xl) {
    padding: rem(80) 0 rem(160);
  }
  
  &__container {
    position: relative;
    
    // 背景装飾SVG
    &::before {
      content: '';
      position: absolute;
      top: 0;
      right: rem(-200);
      width: rem(400);
      height: 100%;
      background-image: url('/images/content/img_line-decoration-yellow-01.svg');
      background-repeat: no-repeat;
      background-position: top right;
      background-size: contain;
      opacity: 0.5;
      z-index: 0;
      pointer-events: none;
      
      @include breakpoint-up(md) {
        right: rem(-300);
        width: rem(600);
      }
      
      @include breakpoint-up(lg) {
        right: rem(-350);
        width: rem(700);
      }
    }
  }
  
  // 右下の切り欠け部分の背景色を設定（次のセクションと同色）
  &::after {
    content: '';
    position: absolute;
    bottom: 0;
    right: 0;
    width: rem(30);
    height: rem(30);
    background-color: $background-quaternary;
    z-index: -1;
    
    @include breakpoint-up(md) {
      width: rem(60);
      height: rem(60);
    }
    
    @include breakpoint-up(lg) {
      width: rem(72);
      height: rem(72);
    }
  }
  
  &__content {
    max-width: none;
    margin: 0;
    text-align: left;
    position: relative;
    z-index: 1;
  }
  
  &__title {
    @include font-ja-l(semibold);
    margin-bottom: rem(24);
    line-height: 1.4;
    
    @include breakpoint-up(lg) {
      @include font-ja-2l(semibold);
    }
  }
  
  &__title-line {
    font-size: rem(22);
    font-weight: 600;
    display: inline;
    background: linear-gradient(to bottom, transparent 8%, $brand-secondary 8%, $brand-secondary 98%, transparent 98%);
    color: $text-primary;
    line-height: 1.6;
    padding: rem(4) rem(8) rem(2) rem(4);
    box-decoration-break: clone;
    -webkit-box-decoration-break: clone;
    
    @include breakpoint-up(md) {
      @include font-ja-l(semibold);
      padding: rem(4) rem(10) rem(2) rem(6);
    }
  }
  
  &__description {
    @include font-ja-s;
    color: $text-primary;
    line-height: 1.7;
    margin-bottom: rem(32);
    
    @include breakpoint-up(md) {
      margin-bottom: rem(48);
    }
    
    @include breakpoint-up(xl) {
      max-width: rem(1200);
    }
  }
  
  &__message {
    background: $brand-sub-yellow-low;
    padding: rem(24);
    border-radius: $radius-l;
    margin-bottom: rem(32);
    
    p {
      @include font-ja-s;
      color: $text-primary;
      margin: 0;
    }
  }
  
  &__buttons {
    margin-top: rem(32);
  }
  
  // メインキャンパス 3つのポイント
  &__points {
    margin-top: rem(80);
    text-align: center;
    
    @include breakpoint-up(lg) {
      margin: rem(80) auto;
      max-width: rem(1140);
    }
  }
  
  &__points-title {
    @include font-ja-m(semibold);
    color: $text-primary;
    margin: 0 auto rem(30);
    text-align: center;
    border-left: 8px solid $brand-secondary;
    border-right: 8px solid $brand-secondary;
    display: inline-block;
    padding: 0 rem(20) rem(5);
    
    @include breakpoint-up(lg) {
      @include font-ja-l(semibold);
      margin: 0 auto rem(40);
    }
  }
  
  &__points-number {
    @include font-ja-l(semibold);
    color: $brand-secondary;
    line-height: 1;
    vertical-align: baseline;
    position: relative;
    bottom: rem(-2);
    
    @include breakpoint-up(lg) {
      @include font-ja-2l(semibold);
      bottom: rem(-4);
    }
  }
  
  &__points-grid {
    display: flex;
    flex-direction: column;
    gap: rem(20);
    
    @include breakpoint-up(lg) {
      flex-direction: row;
      gap: rem(30);
    }
  }
  
  &__point {
    display: flex;
    gap: 0;
    align-items: flex-start;
    background: $background-secondary;
    border-radius: $radius-l;
    
    @include breakpoint-up(lg) {
      flex-direction: column;
      text-align: center;
      flex: 1;
      border-radius: $radius-2l;
    }
  }
  
  &__point-image {
    flex-shrink: 0;
    width: rem(150);
    height: rem(150);
    overflow: hidden;
    
    @include breakpoint-up(lg) {
      width: 100%;
      aspect-ratio: 4/3;
      height: auto;
      margin: 0 auto;
    }
    
    img {
      width: 100%;
      height: 100%;
      object-fit: cover;
      object-position: center;
      border-radius: $radius-l;
      @include breakpoint-up(lg) {
        border-radius: $radius-2l;
      }
    }
  }
  
  &__point-content {
    flex: 1;
    padding: rem(6) rem(8) rem(6) rem(12);
    text-align: left;
    
    @include breakpoint-up(md) {
      padding: rem(10) rem(15) rem(10) rem(20);
    }
    
    @include breakpoint-up(lg) {
      flex: none;
      padding: rem(15) rem(20) rem(30);
      text-align: center;
    }
  }
  
  &__point-number {
    letter-spacing: 0.1em;
    margin-bottom: 0;
    color: $brand-secondary;
    
    // Point部分
    .point-text {
      @include font-en-3s(semibold);
    }
    
    // 数字部分
    .point-number {
      @include font-en-s(semibold);
    }
  }
  
  &__point-title {
    @include font-ja-s(semibold);
    color: $text-primary;
    margin-bottom: rem(12);
    
    @include breakpoint-up(lg) {
      @include font-ja-m(semibold);
    }
  }
  
  &__point-description {
    @include font-ja-2s;
    color: $text-primary;
    line-height: 1.6;
    margin: 0;
    
    @include breakpoint-up(lg) {
      @include font-ja-s;
      text-align: left;
    }
  }
  
  // ページナビゲーション
  &__page-nav {
    margin-top: rem(60);
    
    @include breakpoint-up(lg) {
      margin-top: rem(80);
    }
  }
}

/* ナビゲーションリンク */
.page-nav {
  &__menu {
    display: grid;
    width: 90%;
    margin: 0 auto;
    grid-template-columns: 1fr 1fr;
    gap: 0;

    @include breakpoint-up(sm) {
      display: flex;
      flex-direction: row;
      flex-wrap: wrap;
      justify-content: center;
    }
  }

  &__link {
    display: flex;
    align-items: center;
    gap: rem(5);
    color: $text-primary;
    text-decoration: none;
    transition: color 0.3s ease;
    padding: rem(6) rem(10);

    @include breakpoint-up(sm) {
      gap: rem(12);
      padding: rem(6) rem(20);
      border-right: 1px solid $border-secondary;
    }

    @include breakpoint-up(xl) {
      padding: rem(6) rem(30);
    }

    &:first-child {
      @include breakpoint-up(sm) {
        padding-left: 0;
      }
    }

    &:last-child {
      border-right: none;
    }

    &:hover {
      color: $brand-secondary;
      text-decoration: none;

      .page-nav__arrow {
        transform: translateY(rem(6)) rotate(45deg);
      }
    }
  }

  &__text {
    @include font-ja-s(semibold);
  }

  &__arrow {
    width: rem(9);
    height: rem(9);
    border-right: 2px solid currentColor;
    border-bottom: 2px solid currentColor;
    transform: rotate(45deg);
    transition: transform 0.3s ease;
    flex-shrink: 0;
    margin-right: rem(3);
  }
}

/* ②開講コースセクション */
.courses-section {
  @extend .section-decoration;
  background: $background-quaternary;
  
  &::after {
    background: linear-gradient(to bottom, $background-primary 50%, $background-secondary 50%);
  }
}

/* 開催日表示 */
.executed-date-display {
  @include font-ja-m(semibold);
  color: $text-secondary;
  text-align: left;
  margin: 0 0 rem(16) 0;
  
  @include breakpoint-up(md) {
    // margin-bottom: rem(40);
  }
  
  @include breakpoint-up(lg) {
    @include font-ja-l(semibold);
    // margin-bottom: rem(48);
  }
}

/* 講座グリッド */
.courses-grid {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: rem(12);
  padding-bottom: rem(32);
  
  @include breakpoint-up(md) {
    gap: rem(18);
    padding-bottom: rem(40);
  }
  
  @include breakpoint-up(lg) {
    grid-template-columns: repeat(3, 1fr);
  }
  @include breakpoint-up(xl) {
    max-width: rem(1400);
    margin: 0 auto;
    gap: rem(24);
    padding-bottom: rem(48);
  }
}

/* コースカード */
.course-card {
  background: $background-primary;
  border-radius: $radius-m;
  overflow: hidden;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  transition: all 0.3s ease;
  text-decoration: none;
  color: inherit;
  display: flex;
  flex-direction: column;
  height: 100%;
  @include breakpoint-up(md) {
    border-radius: $radius-l;
  }
  
  &:hover {
    transform: translateY(-4px);
    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.15);
    text-decoration: none;
  }
  
  &__image {
    position: relative;
    aspect-ratio: 4 / 3;
    overflow: hidden;
    border-radius: $radius-m;

    @include breakpoint-up(md) {
      border-radius: $radius-l;
      aspect-ratio: 16 / 9;
    }
    
    &::after {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: linear-gradient(to bottom, rgba(0, 0, 0, 0.2) 0%, rgba(0, 0, 0, 0.2) 5%, transparent 100%);
      pointer-events: none;
      z-index: 1;
    }
    
    img {
      width: 100%;
      height: 100%;
      object-fit: cover;
      transition: transform 0.3s ease;
    }
  }
  
  &__status {
    position: absolute;
    top: rem(8);
    left: rem(8);
    z-index: 2;
    @include breakpoint-up(md) {
      top: rem(10);
      left: rem(10);
    }
    @include breakpoint-up(lg) {
      top: rem(12);
      left: rem(12);
    }
    
    img {
      height: rem(24);
      width: auto;
      
      @include breakpoint-up(md) {
        height: rem(32);
      }
    }
  }
  
  &__report-ribbon {
    position: absolute;
    bottom: rem(16);
    right: rem(8);
    z-index: 2;
    display: flex;
    flex-direction: column;
    align-items: center;
    
    @include breakpoint-up(md) {
      bottom: rem(20);
      right: rem(10);
    }
    
    @include breakpoint-up(lg) {
      bottom: rem(24);
      right: rem(12);
    }
    
    @include breakpoint-up(xl) {
      bottom: rem(32);
    }
  }
  
  &__content {
    padding: rem(12) rem(12) rem(16);
    display: flex;
    flex-direction: column;
    flex: 1;
    
    @include breakpoint-up(md) {
      padding: rem(16) rem(16) rem(20);
    }
    
    @include breakpoint-up(lg) {
      padding: rem(20) rem(20) rem(30);
    }
  }
  
  &__header {
    display: flex;
    align-items: flex-start;
    justify-content: space-between;
    gap: rem(8);
    margin-bottom: rem(12);
  }
  
  &__title {
    @include font-ja-2s(semibold);
    color: $text-primary;
    margin: 0;
    line-height: 1.4;
    flex: 1;
    
    @include breakpoint-up(md) {
      @include font-ja-s(semibold);
    }
    
    @include breakpoint-up(lg) {
      @include font-ja-m(semibold);
    }
  }
  
  &__arrow {
    width: rem(20);
    height: rem(20);
    background-color: $brand-secondary;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-shrink: 0;
    transition: all 0.3s ease;
    
    @include breakpoint-up(md) {
      width: rem(24);
      height: rem(24);
    }
    
    &::after {
      content: '';
      width: rem(6);
      height: rem(6);
      border-right: 2px solid $text-white;
      border-bottom: 2px solid $text-white;
      transform: translateX(rem(-1)) rotate(-45deg);
      
      @include breakpoint-up(md) {
        width: rem(8);
        height: rem(8);
        transform: translateX(rem(-1)) rotate(-45deg);
      }
    }
  }
  
  &:hover &__arrow {
    transform: translateX(rem(2));
  }
  
  &:hover &__image img {
    transform: scale(1.1);
  }
  
  &__provider {
    @include font-ja-3s(semibold);
    color: $text-secondary;
    margin: 0 0 rem(12) 0;
    line-height: 1.4;
    flex-grow: 1;
    
    @include breakpoint-up(md) {
      @include font-ja-2s(semibold);
    }
  }
  
  &__grades {
    display: flex;
    flex-wrap: wrap;
    gap: rem(4);
    margin-top: auto;
    
    @include breakpoint-up(md) {
      gap: rem(6);
    }
  }
}

/* 実施レポートリボン */
.report-ribbon {
  &__tail {
    position: absolute;
    left: 50%;
    top: rem(30);
    transform: translateX(-50%);
    height: 0;
    width: 0;
    border-top: rem(12) solid $text-white;
    border-left: rem(12) solid $text-white;
    border-right: rem(12) solid $text-white;
    border-bottom: rem(12) solid transparent;
    border-radius: 0 0 rem(3) rem(3);
    z-index: 1;
    // margin-top: rem(-4);
    
    @include breakpoint-up(md) {
      top: rem(38);
    }
    @include breakpoint-up(lg) {
      top: rem(44);
    }
    @include breakpoint-up(xl) {
      top: rem(60);
      border-top: rem(18) solid $text-white;
      border-left: rem(18) solid $text-white;
      border-right: rem(18) solid $text-white;
      border-bottom: rem(18) solid transparent;
      border-radius: 0 0 rem(5) rem(5);
    }
  }
  
  &__circle {
    width: rem(40);
    height: rem(40);
    background-color: $brand-primary;
    border: 2px solid $text-white;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
    z-index: 2;
    
    @include breakpoint-up(md) {
      width: rem(48);
      height: rem(48);
    }
    @include breakpoint-up(lg) {
      width: rem(52);
      height: rem(52);
    }
    @include breakpoint-up(xl) {
      width: rem(70);
      height: rem(70);
    }
  }
  
  &__text {
    color: $text-white;
    text-align: center;
    line-height: 0.6;
    padding-bottom: rem(4);
    @include breakpoint-up(md) {
      line-height: 0.7;
      padding-bottom: rem(4);
    }
    @include breakpoint-up(lg) {
      padding-bottom: 0;
    }
    @include breakpoint-up(xl) {
      line-height: 1;
      padding-bottom: rem(2);
    }
  }
  
  &__text-line1 {
    // 「実施」のスタイル
    @include font-ja-3s(semibold);
    
    @include breakpoint-up(lg) {
      @include font-ja-s(semibold);
      margin-top: rem(-1);
    }
  }
  
  &__text-line2 {
    // 「レポート」のスタイル
    @include font-ja-4s(semibold);
    margin-top: rem(-2);
    @include breakpoint-up(md) {
    }
    
    @include breakpoint-up(xl) {
      @include font-ja-3s(semibold);
      margin-top: 0;
    }
  }
}

/* ステータスバッジ */
.status-badge {
  @include font-ja-3s(semibold);
  color: $text-white;
  padding: rem(2) rem(4);
  border-radius: $radius-xs;
  white-space: nowrap;
  
  @include breakpoint-up(md) {
    @include font-ja-2s(semibold);
    // padding: rem(6) rem(12);
  }
  
  &--dark-gray {
    background: $background-dark-gray;
  }
  
  &--brand-secondary {
    background: $brand-secondary;
  }
  
  &--brand-turquoise {
    background: $brand-turquoise;
  }
  
  &--brand-pink {
    background: $brand-pink;
  }
}

/* 学年タグ（scheduleページと同じスタイル） */
.target-grade {
  @include font-ja-3s(semibold);
  padding: rem(2) rem(4);
  border: 1px solid $brand-black;
  border-radius: rem(8);
  white-space: nowrap;
  margin-bottom: rem(2);
  color: $text-primary;
  
  @include breakpoint-up(lg) {
    @include font-ja-2s(semibold);
    padding: rem(4) rem(6);
    border-radius: rem(10);
  }
  
  &--elementary-low {
    background-color: $brand-sub-yellow-low;
    color: $text-primary;
  }
  
  &--elementary-high {
    background-color: $brand-sub-purple-low;
    color: $text-primary;
  }
  
  &--junior {
    background-color: $brand-sub-turquoise-low;
    color: $text-primary;
  }
  
  &--special {
    background-color: $brand-sub-pink-low;
    color: $text-primary;
  }
  
  // むなかた子ども大学の日用（学校名表示）
  &--mku-day {
    background-color: $background-primary;
    border: 1px solid $brand-black;
    color: $text-primary;
  }
}

/* 空状態 */
.empty-state {
  text-align: center;
  padding: rem(40) 0 0;
  
  @include breakpoint-up(md) {
    // padding: rem(80;
  }
  
  &__icon {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    margin-bottom: rem(32);
    
    @include breakpoint-up(md) {
      margin-bottom: rem(40);
    }
    
    svg {
      width: rem(60);
      height: rem(60);
      color: $brand-primary;
      
      @include breakpoint-up(md) {
        width: rem(80);
        height: rem(80);
      }
    }
  }
  
  &__description {
    @include font-ja-s;
    color: $text-primary;
    line-height: 1.7;
    margin: 0;
  }
}


/* ③1日の流れセクション */
.flow-section {
  @extend .section-decoration;
  background: $background-secondary;
  position: relative;
  
  &::after {
    background: linear-gradient(to bottom, $background-quaternary 50%, $background-primary 50%);
  }
  
  &__container {
    position: relative;
    
    // 背景装飾SVG
    &::after {
      content: '';
      position: absolute;
      top: 0;
      right: rem(-200);
      width: rem(400);
      height: 100%;
      background-image: url('/images/content/img_line-decoration-white-01.svg');
      background-repeat: no-repeat;
      background-position: top right;
      background-size: contain;
      opacity: 0.5;
      z-index: 0;
      pointer-events: none;
      
      @include breakpoint-up(md) {
        right: rem(-300);
        width: rem(600);
      }
      
      @include breakpoint-up(lg) {
        right: rem(-350);
        width: rem(700);
      }
    }
  }
  
  &__content {
    text-align: center;
    position: relative;
    z-index: 1;
  }
  
  &__steps {
    display: flex;
    flex-direction: column;
    align-items: center;
    
    @include breakpoint-up(lg) {
      flex-direction: row;
      justify-content: center;
      align-items: stretch;
    }
  }
  
  &__step {
    display: flex;
    gap: 0;
    align-items: center;
    border: 1px solid $brand-secondary;
    border-radius: $radius-l;
    flex: 1;
    max-width: rem(480);
    position: relative;
    @include breakpoint-up(md) {
      min-width: rem(480);
    }
    
    @include breakpoint-up(lg) {
      min-width: 0;
      flex-direction: column;
      text-align: center;
      max-width: none;
      border-radius: $radius-2l;
    }
  }
  
  &__step-image {
    flex-shrink: 0;
    width: rem(130);
    height: rem(130);
    margin: rem(-1);
    
    @include breakpoint-up(lg) {
      width: calc(100% + 2px);
      aspect-ratio: 4/3;
      height: auto;
      margin: rem(-1) rem(-1) 0;
    }
    
    img {
      width: 100%;
      height: 100%;
      object-fit: cover;
      border-radius: $radius-l;
      @include breakpoint-up(lg) {
        border-radius: $radius-2l;
      }
    }
  }
  
  &__step-content {
    flex: 1;
    padding: rem(6) rem(10) rem(6) rem(15);
    text-align: left;
    
    @include breakpoint-up(md) {
      padding: rem(10) rem(15) rem(10) rem(20);
    }
    
    @include breakpoint-up(lg) {
      flex: none;
      padding: rem(15) rem(15) rem(20);
      text-align: center;
    }
    @include breakpoint-up(xl) {
      padding: rem(15) rem(20) rem(30);
    }
  }
  
  &__step-title {
    @include font-ja-s(semibold);
    color: $text-primary;
    margin-bottom: rem(12);
    
    @include breakpoint-up(lg) {
      @include font-ja-m(semibold);
    }
  }
  
  &__step-description {
    @include font-ja-2s;
    color: $text-primary;
    line-height: 1.6;
    margin: 0;
    
    @include breakpoint-up(lg) {
      @include font-ja-s;
      text-align: left;
    }
  }
  
  &__arrow {
    display: flex;
    align-items: center;
    justify-content: center;
    width: rem(32);
    height: rem(32);
    color: $brand-secondary;
    flex-shrink: 0;
    
    @include breakpoint-up(xl) {
      width: rem(50);
      height: rem(50);
      align-self: center;
    }
    
    svg {
      width: rem(24);
      height: rem(24);
      transform: rotate(90deg);
      
      @include breakpoint-up(xl) {
        width: rem(50);
        height: rem(50);
        transform: rotate(0deg);
      }
    }
  }
}

/* ④参加までの流れセクション */
.process-section {
  @extend .section-decoration;
  background: $background-primary;
  
  &::after {
    background: linear-gradient(to bottom, $background-secondary 50%, $background-secondary 50%);
  }
  
  &__content {
    text-align: center;
  }
  
  &__intro {
    text-align: left;
    margin-bottom: rem(40);
    
    @include breakpoint-up(md) {
      margin-bottom: rem(48);
    }
    
    @include breakpoint-up(lg) {
      margin-bottom: rem(56);
    }
    
    p {
      @include font-ja-s;
      color: $text-primary;
      line-height: 1.7;
      margin: 0;
    }
  }
  
  &__illustration {
    max-width: rem(800);
    margin: 0 auto;
    
    @include breakpoint-up(md) {
      max-width: rem(1000);
    }
    
    @include breakpoint-up(lg) {
      max-width: rem(1200);
    }
  }
  
  &__image {
    width: 100%;
    height: auto;
    
    &--sp {
      display: block;
      
      @include breakpoint-up(sm) {
        display: none;
      }
    }
    
    &--pc {
      display: none;
      
      @include breakpoint-up(sm) {
        display: block;
      }
    }
  }
}

/* ⑤過去の実績セクション */
.archive-section {
  background: $background-secondary;
  border-top-left-radius: rem(30);
  position: relative;
  overflow: hidden;
  padding-bottom: 0;
  
  @include breakpoint-up(md) {
    border-top-left-radius: rem(60);
  }
  
  @include breakpoint-up(lg) {
    border-top-left-radius: rem(72);
  }
  
  &::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: $background-primary;
    z-index: -1;
  }
  
  &__container {
    position: relative;
    
    // 背景装飾SVG
    &::before {
      content: '';
      position: absolute;
      bottom: rem(-20);
      right: rem(-50);
      width: rem(200);
      height: rem(200);
      background-image: url('/logos/mark-del_mku_white.svg');
      background-repeat: no-repeat;
      background-position: center;
      background-size: contain;
      opacity: 0.5;
      z-index: 1;
      pointer-events: none;
      
      @include breakpoint-up(md) {
        right: rem(-60);
        width: rem(250);
        height: rem(250);
      }
      
      @include breakpoint-up(lg) {
        bottom: 0;
        right: rem(-40);
        width: rem(300);
        height: rem(300);
      }
    }
  }
  
  &__content {
    text-align: center;
    position: relative;
    z-index: 1;
    padding-bottom: rem(80);
    @include breakpoint-up(md) {
      padding-bottom: rem(100);
    }
    @include breakpoint-up(lg) {
      padding-bottom: rem(120);
    }
  }
}

/* アーカイブリンク */
.archive-links {
  display: flex;
  justify-content: center;
  gap: rem(16);
  flex-wrap: wrap;
  
  @include breakpoint-up(md) {
    gap: rem(24);
    justify-content: flex-start;
    margin: 0 auto;
  }
  
  .base-button {
    color: $text-white;
    text-decoration: none;
    
    &:hover {
      text-decoration: none;
      color: $text-primary;
    }
  }
}

/* 申込ボタンセクション */
.application-buttons-section {
  margin-top: rem(60);
  
  @include breakpoint-up(md) {
    margin-top: rem(80);
  }
  
  @include breakpoint-up(lg) {
    margin-top: rem(100);
  }
}

.application-buttons-check-label {
  @include font-ja-l(semibold);
  color: $brand-secondary;
  text-align: center;
  margin-bottom: rem(10);
  animation: checkScale 2s ease-in-out infinite;
  
  @include breakpoint-up(lg) {
    @include font-ja-2l(semibold);
    margin-bottom: rem(10);
  }
}

.application-buttons-grid {
  display: flex;
  flex-direction: column;
  gap: rem(20);
  align-items: center;
  
  @include breakpoint-up(lg) {
    display: grid;
    gap: rem(24);
    max-width: rem(900);
    margin: 0 auto;
    justify-items: stretch;
    align-items: stretch;
    grid-template-columns: 1fr 1fr;
  }
  
  @include breakpoint-up(xl) {
    max-width: rem(1160);
  }
  
  // 1つの場合の特別なスタイル
  &.application-buttons-grid--single {
    @include breakpoint-up(lg) {
      grid-template-columns: 1fr;
      justify-items: center;
      max-width: rem(720);
    }
    
    @include breakpoint-up(xl) {
      max-width: rem(850);
    }
  }
}

.application-button-item {
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
  width: 100%;
  max-width: rem(420);
  padding: rem(28) rem(18);
  border: 2px solid $brand-secondary;
  border-radius: $radius-m;
  background-color: $background-primary !important;
  background-image: 
    radial-gradient(circle, #feecc5 1px, transparent 1px),
    radial-gradient(circle, #feecc5 1px, transparent 1px) !important;
  background-position: 0 0, 6.5px 6.5px !important;
  background-size: 13px 13px !important;
  animation: buttonBoxScale 2.5s ease-in-out infinite;
  
  @include breakpoint-up(md) {
    padding: rem(36) rem(20) !important;
    border-radius: $radius-l;
    max-width: rem(480);
  }
  
  @include breakpoint-up(lg) {
    padding: rem(32) rem(30);
    
    // 複数ボタンの場合：max-widthなし（stretch）
    .application-buttons-grid:not(.application-buttons-grid--single) & {
      max-width: none;
    }
    
    // 単体ボタンの場合：適切なmax-width維持
    .application-buttons-grid.application-buttons-grid--single & {
      max-width: rem(720);
    }
  }
  
  @include breakpoint-up(xl) {
    padding: rem(40) rem(40) !important;
    
    // 複数ボタンの場合：max-widthなし（stretch）
    .application-buttons-grid:not(.application-buttons-grid--single) & {
      max-width: none;
    }
    
    // 単体ボタンの場合：適切なmax-width維持
    .application-buttons-grid.application-buttons-grid--single & {
      max-width: rem(850);
    }
  }
  
  &__label-above {
    @include font-ja-s(semibold);
    color: $text-secondary;
    margin: 0 0 rem(16) 0;
    text-align: left;
    line-height: 1.6;
    
    @include breakpoint-up(md) {
      margin-bottom: rem(20);
    }
  }
  
  &__button-wrapper {
    display: flex;
    flex-direction: column;
    align-items: center;
    flex-grow: 1;
    justify-content: center;
    margin-top: rem(16);
    
    @include breakpoint-up(md) {
      margin-top: rem(20);
    }
  }
  
  &__button {
    color: $text-white !important;
    text-decoration: none !important;
    
    &:hover {
      color: $text-white !important;
      text-decoration: none !important;
    }
    
    &:focus {
      color: $text-white !important;
      text-decoration: none !important;
    }
    
    &:visited {
      color: $text-white !important;
      text-decoration: none !important;
    }
    
    .base-button__text {
      color: $text-white !important;
    }
  }
  
  &__label-below {
    @include font-ja-s(semibold);
    color: $text-primary;
    margin: rem(5) 0 0 0;
    text-align: center;
    line-height: 1.6;
    
    @include breakpoint-up(md) {
      // margin-top: rem(20);
    }
  }
}

/* 外部リンクアイコン（SVG） */
:global(.base-button__icon-external) {
  width: rem(16);
  height: rem(16);
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.5s ease;
  
  svg {
    width: 100%;
    height: 100%;
    transition: all 0.5s ease;
  }
}

// ブルーボタン用の外部リンクアイコン
:global(.base-button--blue .base-button__icon-external) {
  color: $brand-primary;
}

:global(.base-button--blue:hover .base-button__icon-external) {
  color: $brand-secondary;
  transform: rotate(360deg);
}

// ホワイトボタン用の外部リンクアイコン
:global(.base-button--white .base-button__icon-external) {
  color: $background-primary;
}

:global(.base-button--white:hover .base-button__icon-external) {
  color: $brand-secondary;
  transform: rotate(360deg);
}

// ピンクボタン用の外部リンクアイコン
:global(.base-button--pink .base-button__icon-external) {
  color: $brand-pink;
}

:global(.base-button--pink:hover .base-button__icon-external) {
  color: $brand-secondary;
  transform: rotate(360deg);
}

/* スケールアニメーション */
@keyframes checkScale {
  0%, 100% { 
    transform: scale(1); 
  }
  50% { 
    transform: scale(1.08); 
  }
}

@keyframes buttonBoxScale {
  0%, 100% { 
    transform: scale(1); 
  }
  40% { 
    transform: scale(1.02); 
  }
  60% { 
    transform: scale(1.02); 
  }
}

// courses-title-wrapperの全画面幅でpadding-leftを無効化
:global(.content-section__title-wrapper.courses-title-wrapper) {
  padding-left: 0 !important;
}
</style>

<script>
// 自動スクロール機能
document.addEventListener('DOMContentLoaded', function() {
  const navLinks = document.querySelectorAll('.page-nav__link');
  
  navLinks.forEach(link => {
    link.addEventListener('click', function(e) {
      e.preventDefault();
      
      const href = this.getAttribute('href');
      const targetId = href?.substring(1);
      const targetElement = targetId ? document.getElementById(targetId) : null;
      
      if (targetElement) {
        const headerHeight = 80; // ヘッダーの高さ分のオフセット
        const elementPosition = targetElement.getBoundingClientRect().top;
        const offsetPosition = elementPosition + window.pageYOffset - headerHeight;

        window.scrollTo({
          top: offsetPosition,
          behavior: 'smooth'
        });
      }
    });
  });
});
</script>